<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        j+bdWvwPfQdosVBcMLYAAAAASUVORK5CYII=
</value>
  </data>
</root>