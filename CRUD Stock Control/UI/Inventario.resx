<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>